# React Project Commands and Details

## 1. Session Start (19 June 2025)
- Tracking of all commands and work related to React in this workspace has started.

## 2. React App Creation Commands Used

### A. Using Create React App (basic-react)
- Command: `npx create-react-app basic-react`
  - Description: Bootstraps a new React project using Create React App.
  - Directory: `/Users/nirmalsingh/Desktop/React/`
  - Result: Created the `basic-react` folder with all necessary files and dependencies.

### B. Using Vite (first-vite-react-app)
- Command: `npm create vite@latest first-vite-react-app -- --template react`
  - Description: Creates a new React project using Vite for faster development and build.
  - Directory: `/Users/nirmalsingh/Desktop/React/`
  - Result: Created the `first-vite-react-app` folder with Vite and React setup.

## 3. Running the React App
- Command: `npm run dev`
  - Description: Starts the Vite development server for the `first-vite-react-app`.
  - Directory: `/Users/nirmalsingh/Desktop/React/first-vite-react-app`
  - Output: Local server started at http://localhost:5173/ (with some missing file errors).

## 4. Tracking Setup
- 19 June 2025: Set up automated tracking for all commands, file changes, and work in this workspace as requested by the user.

## 5. Code Changes and Custom Implementation (19 June 2025)
- Modified `first-vite-react-app/src/App.jsx`:
  - Added import for `Chai` component and rendered it.
  - Introduced a `username` variable and displayed it in the main heading.
- Modified `first-vite-react-app/src/main.jsx`:
  - Added a custom `Nirmal` function component.
  - Demonstrated multiple ways to create and render React elements, including with `React.createElement` and JSX.
  - Only `<App />` is rendered by default; other render options are commented for reference.
- Created `custom-react/customreact.js`:
  - Implemented a `customRender` function to mimic React's rendering for a single anchor element.
  - Demonstrated usage with a sample React-like object and rendered it to the DOM.
- Created `custom-react/index.html`:
  - Simple HTML file to test the custom render logic by including `customreact.js` and rendering to a `div#root`.

## 6. Tailwind Props Project Updates (19 June 2025)
- Created/modified `src/assets/components/Card.jsx` in the `tailwind-props` project:
  - Implemented a `Card` React component that uses Tailwind CSS utility classes for styling.
  - The component displays an image, a username (from props, with a default fallback), a heading, and a description.
  - Demonstrates use of Tailwind classes for layout, color, and typography.

## 7. React Fiber (Brief Overview)
- React Fiber is the new reconciliation engine in React (since React 16).
- It enables incremental rendering, allowing React to split rendering work into units and pause, resume, or abort work as needed.
- Fiber improves responsiveness and enables features like concurrent rendering, prioritization, and better handling of large component trees.
- It is a core part of how React efficiently updates the UI in modern applications.

---

*This log will be updated automatically as you continue working.*
